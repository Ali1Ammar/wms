{
  // Place your app workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "auto route page": {
    "scope": "dart",
    "prefix": "autopage",
    "body": [
      "import 'package:auto_route/annotations.dart';",
      "import 'package:flutter_riverpod/flutter_riverpod.dart';",
      "import 'package:flutter/material.dart';",
      "@RoutePage()",
      "class ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/} extends ConsumerWidget {",
      "	const ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/} ({super.key});",
      "	@override",
      "	Widget build(BuildContext context, WidgetRef ref) {",
      "		return const Placeholder();",
      "	}",
      "}"
    ],
    "description": "create a consumer page with auto route config"
  },
  "async notifier": {
    "scope": "dart",
    "prefix": "asyncnotifier",
    "body": [
      "import 'dart:async';",
      "",
      "import 'package:riverpod/riverpod.dart';",
      "import 'package:wms/src/domain/entities/entities.dart';",
      "",
      "typedef ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}State = List<Transaction>;",
      "final ${TM_FILENAME_BASE/(.*)/${1:/camelcase}/}Provider = AsyncNotifierProvider<${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/},${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}State>(${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}.new);",
      "",
      "class ${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/} extends AsyncNotifier<${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}State> {",
      "  @override",
      "  FutureOr<${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/}State> build() {",
      "    // TODO: implement build",
      "    throw UnimplementedError();",
      "  }",
      "}",
      ""
    ],
    "description": "create a async notifier provider"
  }
}
